<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects | Kelsey E. Gonzalez</title>
    <link>/project/</link>
      <atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    <description>Projects</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 24 May 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/kelseygonzalez2020.png</url>
      <title>Projects</title>
      <link>/project/</link>
    </image>
    
    <item>
      <title>Coronavirus Unemployment</title>
      <link>/project/2020-05-24-coronavirus-unemployment/coronavirus-unemployment/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>/project/2020-05-24-coronavirus-unemployment/coronavirus-unemployment/</guid>
      <description>


&lt;p&gt;Which states have been most impacted by unemployment due to the 2020 Coronavirus pandemic? To investigate this, I use the Bureau of Labor Statistics API and some special R ggplot extensions to visualize this relationship with sparklines and small multiples.&lt;/p&gt;
&lt;div id=&#34;load-packages&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Load Packages&lt;/h1&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(blscrapeR, geofacet, tidyverse, scales, here)

# For Windows computers, load font devices here: 
# extrafont::loadfonts(device = &amp;quot;win&amp;quot;, quiet = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, scrape the 2020 monthly unemployment data with the Bureau of Labor Statistics API. This isn’t pretty, particularly because each of the “LASST” links is somewhat randomly named and does not import the state name.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bls &amp;lt;- 
  bls_api(&amp;quot;LASST010000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Alabama&amp;quot;) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST020000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Alaska&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST040000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Arizona&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST050000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Arkansas&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST060000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;California&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST080000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Colorado&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST090000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Connecticut&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST100000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Delaware&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST110000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;District of Columbia&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST120000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Florida&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST130000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Georgia&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST150000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Hawaii&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST160000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Idaho&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST170000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Illinois&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST180000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Indiana&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST190000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Iowa&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST200000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Kansas&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST210000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Kentucky&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST220000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Louisiana&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST230000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Maine&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST240000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Maryland&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST250000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Massachusetts&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST260000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Michigan&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST270000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Minnesota&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST280000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Mississippi&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST290000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Missouri&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST300000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Montana&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST310000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Nebraska&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST320000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Nevada&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST330000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;New_Hampshire&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST340000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;New_Jersey&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST350000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;New_Mexico&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST360000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;New_York&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST370000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;North_Carolina&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST380000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;North_Dakota&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST390000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Ohio&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST400000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Oklahoma&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST410000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Oregon&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST420000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Pennsylvania&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST440000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Rhode_Island&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST450000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;South_Carolina&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST460000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;South_Dakota&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST470000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Tennessee&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST480000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Texas&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST490000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Utah&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST500000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Vermont&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST510000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Virginia&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST530000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Washington&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST540000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;West_Virginia&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST550000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Wisconsin&amp;quot;)) %&amp;gt;%
  bind_rows(bls_api(&amp;quot;LASST560000000000003&amp;quot;, startyear = 2020, endyear = 2020) %&amp;gt;% mutate(state = &amp;quot;Wyoming&amp;quot;)) %&amp;gt;%
  dplyr::select(-c(year,period, latest, footnotes,seriesID))

write_csv(bls, path = &amp;quot;bls_July.csv&amp;quot;) # save the data, as you have limited daily queries! &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, I already have this data saved, so I’ll import it here instead:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bls &amp;lt;- read_csv(&amp;quot;bls_July.csv&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   periodName = col_character(),
##   value = col_double(),
##   state = col_character()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bls &amp;lt;- bls %&amp;gt;% 
  pivot_wider(id_cols = &amp;quot;state&amp;quot;, 
              names_from = periodName, 
              values_from = value) %&amp;gt;% # change from long for to wide form
  rowwise() %&amp;gt;% 
  mutate(row_max = max(January:June), # calculate maximum unemployment by state
         row_min = min(January:June), # calculate minimum unemployment by state
         diff = (row_max - row_min)/100) %&amp;gt;%  # calculate the difference between max and min for color plotting 
  pivot_longer(cols = -c(state, diff, row_max, row_min), 
               names_to = &amp;quot;month&amp;quot;, 
               values_to = &amp;quot;value&amp;quot;) %&amp;gt;% # switch back to long form for plotting 
  mutate(month = fct_relevel(as.factor(month), 
                             c(&amp;quot;January&amp;quot;, &amp;quot;February&amp;quot;, &amp;quot;March&amp;quot;, &amp;quot;April&amp;quot;, &amp;quot;May&amp;quot;, &amp;quot;June&amp;quot;)), 
         # turn the month into a factor and reorder it 
         state = str_replace(state, &amp;quot;_&amp;quot;, &amp;quot; &amp;quot;), # replace the &amp;quot;_&amp;quot; in the state names with spaces
         value = value / 100) # to probably render the percents&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now, plot! Not the faceting over approximate state locations with the &lt;code&gt;geofacet&lt;/code&gt; package.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;unempl_plot &amp;lt;- ggplot(bls, aes(x=month, y = value, group = state)) +
  geom_line(aes(color = diff), size = 2) +
  scale_color_gradient(name = &amp;quot;Max Rise in\nUnemployment&amp;quot;,
                       low = &amp;quot;#fffeea&amp;quot;, high = &amp;quot;#c03728&amp;quot;, 
                       label = label_percent(accuracy = 1,
                                             trim = FALSE)) +
  theme_minimal(base_family = &amp;quot;Roboto Condensed&amp;quot;, base_size = 14) +
  theme(axis.text = element_blank(),
        axis.title = element_text(family = &amp;quot;Roboto Condensed Light&amp;quot;),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        legend.position = c(.9,.3),
        legend.title = element_text(size = 8, family = &amp;quot;Roboto Condensed Light&amp;quot;),
        strip.text = element_text(size = 12, &amp;quot;Roboto Condensed Light&amp;quot;),
        legend.text = element_text(size = 10)) +
  facet_geo(~ state, grid = &amp;quot;us_state_grid2&amp;quot;, label = &amp;quot;code&amp;quot;) +
  labs(title = &amp;quot;Which states have the sharpest increase in unemployment due to COVID-19?&amp;quot;,
       caption = &amp;quot;Source: Bureau of Labor Statistics\ngithub.com/kelseygonzalez&amp;quot;,
       x = &amp;quot;Month of 2020 (January - June)&amp;quot;,
       y = &amp;quot;Unemployment Rate&amp;quot;) 

ggsave(&amp;quot;bls_unemployment.png&amp;quot;, plot = unempl_plot, width = 10, height = 6)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;%22bls_unemployment.png%22&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>European Energy Consumption</title>
      <link>/project/2020-08-04-energy/energy/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>/project/2020-08-04-energy/energy/</guid>
      <description>


&lt;p&gt;With Tidy Tuesday 2020-08-04, I use a dataset of European energy sources to explore the similarity of country energy sources by source and size.&lt;/p&gt;
&lt;p&gt;load packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;if (!require(&amp;quot;pacman&amp;quot;)) install.packages(&amp;quot;pacman&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: pacman&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;pacman::p_load(tidytuesdayR, factoextra, ggdendro, dendextend, tidyverse, patchwork)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;load and wrangle data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tuesdata &amp;lt;- tidytuesdayR::tt_load(2020, week = 32)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## --- Compiling #TidyTuesday Information for 2020-08-04 ----&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## --- There are 2 files available ---&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## --- Starting Download ---&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Downloading file 1 of 2: `energy_types.csv`
##  Downloading file 2 of 2: `country_totals.csv`&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## --- Download complete ---&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;totals &amp;lt;- tuesdata$energy_types %&amp;gt;% 
  filter(country != &amp;quot;EL&amp;quot;,
         !is.na(country_name),
         level != &amp;quot;Level 2&amp;quot;) %&amp;gt;% 
  select(country_name, type, `2016`) %&amp;gt;% 
  pivot_wider(id_cols = country_name, names_from = type, values_from = `2016`) %&amp;gt;%
  rowwise() %&amp;gt;% 
  mutate(total = rowSums(across(`Conventional thermal`:Other)),
         across(`Conventional thermal`:Other, ~ . / total)) 

props &amp;lt;- totals %&amp;gt;% 
  select(-total) %&amp;gt;%
  column_to_rownames(&amp;quot;country_name&amp;quot;) %&amp;gt;% 
  as.matrix() %&amp;gt;% 
  scale()

totals &amp;lt;- totals %&amp;gt;% 
  select(name = country_name, total)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Perform hierarchical clustering&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hc1 &amp;lt;- hclust(dist(props), method = &amp;quot;ward.D2&amp;quot; )
sub_grp &amp;lt;- cutree(hc1, k = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Render plot A:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plota &amp;lt;- hc1 %&amp;gt;% 
  as.dendrogram %&amp;gt;% 
  set(&amp;quot;branches_k_color&amp;quot;, 
      value = c(&amp;quot;#43aa8b&amp;quot;, &amp;quot;#577590&amp;quot;,&amp;quot;#f3722c&amp;quot;,&amp;quot;#f94144&amp;quot;,&amp;quot;#90be6d&amp;quot;), 
      k = 5) %&amp;gt;% 
  set(&amp;quot;labels_col&amp;quot;, 
      value = c(&amp;quot;#43aa8b&amp;quot;, &amp;quot;#577590&amp;quot;,&amp;quot;#f3722c&amp;quot;,&amp;quot;#f94144&amp;quot;,&amp;quot;#90be6d&amp;quot;), 
      k = 5) %&amp;gt;% 
  set(&amp;quot;labels_cex&amp;quot;, 0.5) %&amp;gt;% 
  set(&amp;quot;branches_lwd&amp;quot;, 0.5) %&amp;gt;% 
  as.ggdend() %&amp;gt;% 
  ggplot(horiz = TRUE) +
  theme(axis.text.y = element_text(size=1)) +
  theme_minimal(base_family = &amp;quot;Roboto Condensed&amp;quot;, base_size = 14) +
  theme(axis.text = element_blank(),
        axis.title = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        legend.position = &amp;quot;none&amp;quot;)

plota&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2020-08-04-energy/2020-08-04-energy.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Render plot B:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clusters &amp;lt;- fviz_cluster(list(data = props, cluster = sub_grp), repel = TRUE, 
                         outlier.color = &amp;quot;black&amp;quot;, ggtheme = theme_minimal())

plotb &amp;lt;- clusters$data %&amp;gt;% 
  left_join(totals) %&amp;gt;% 
  ggplot(aes(x, y, color = cluster)) +
  geom_point(aes(size = total), alpha = 0.5) +
  ggrepel::geom_text_repel(aes(label = name), size = 2) +
  scale_color_manual(values = c(&amp;quot;#f94144&amp;quot;, &amp;quot;#f3722c&amp;quot;, &amp;quot;#90be6d&amp;quot;, &amp;quot;#577590&amp;quot;, &amp;quot;#43aa8b&amp;quot;)) +
  theme_minimal() +
  theme(axis.text = element_blank(),
        axis.title = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Joining, by = &amp;quot;name&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plotb&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2020-08-04-energy/2020-08-04-energy.en_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Combine plots A &amp;amp; B with patchwork:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plota + plotb + plot_annotation(
  title = &amp;#39;How similar are European countries in energy usage and source?&amp;#39;,
  subtitle = &amp;#39;2016 European energy usage clustered by source concentration&amp;#39;,
  caption = &amp;#39;Data: Eurostat Energy \n Design and Analysis by @KelseyGonzalez&amp;#39;) +
  theme_minimal(base_family = &amp;quot;Roboto Condensed&amp;quot;, base_size = 14) +
  theme(axis.text = element_blank(),
        axis.title = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        legend.position = &amp;quot;none&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/2020-08-04-energy/2020-08-04-energy.en_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# save plot
ggsave(&amp;quot;2020-08-04.png&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Saving 7 x 5 in image&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Coronavirus Mobility</title>
      <link>/project/2020-05-18-covidmobility/mobility/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/project/2020-05-18-covidmobility/mobility/</guid>
      <description>&lt;p&gt;This visualization aims to understand population behavior during the COVID-19
pandemic. I use aggregated human mobility data (how far people move each day)
from Cuebiq, an offline intelligence and measurement marketing company, which
partners with 86 apps to collect first-party location data. Different U.S.
states have handled the Covid-19 Pandemic in vastly different ways, with some
states still refraining from issuing stay-at-home orders. This has led to very
different mobility behaviors by state. I show that the stay-at-home order
successfully reduced movement during the week of March 23rd and April 13th,
with Americans reverting towards pre-COVID-19 movement patterns in between.&lt;/p&gt;
&lt;p&gt;This visualization won the University of Arizona Library Data Visualization Contest.
Learn more here: &lt;a href=&#34;https://new.library.arizona.edu/news/2020-data-visualization-challenge-winners&#34;&gt;https://new.library.arizona.edu/news/2020-data-visualization-challenge-winners&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data is available at &lt;a href=&#34;https://www.cuebiq.com/visitation-insights-covid19/&#34;&gt;https://www.cuebiq.com/visitation-insights-covid19/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Source Code is available at &lt;a href=&#34;https://github.com/kelseygonzalez/covid_mobility&#34;&gt;https://github.com/kelseygonzalez/covid_mobility&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;a doi for this visualization is available at &lt;a href=&#34;https://doi.org/10.25422/azu.data.12374810.v1&#34;&gt;https://doi.org/10.25422/azu.data.12374810.v1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;%22covidmobility.gif%22&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
